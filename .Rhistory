metafor
?metafor
library(metafor)
library(parallel)
packageVersion("parallel")
packageVersion("metafor")
packageVersion("evd")
devtools::document()
knitr::opts_chunk$set(echo = FALSE,message=FALSE,warning = FALSE,fig.width = 10,fig.height = 5)
#
# # c=2
source("/Users/menglixiao/Documents/umn/meta analysis/Rm_value/Rm/Code/Rm_func_all.R")
data.case2 <-  bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
setwd('/Users/menglixiao/Documents/umn/meta analysis/code/a_r/')
bi2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/binary.csv')
co2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/others.csv')
nrow(bi2)+nrow(co2)
load('b.RData')
load('~/Documents/umn/meta analysis/code/a_r/continousMA.RData')
load('I2.RData')
data.case2 <-  bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
data.case2 <- escalc(measure='OR',ai = r1, n1i = n1, ci = r2, n2i = n2,data=data.case2)
data.case2$y <- data.case2$yi
data.case2$s2 <- data.case2$vi
Rm.func.iterative.boot(data.case2)
pgumbel <- Rm.func.iterative(data.case2)$P_1
pgumbel
Rm.func.iterative(data.case2)
dat3 <- data.case2[-Rls$out_studies,]
Rls <- Rm.func.iterative(data.case2)
dat3 <- data.case2[-Rls$out_studies,]
Rm.func.iterative(dat3)
Rm.func.iterative(data.case2)
calR(data.case2)
calR(data.case2,m=1)
data.case
data.case2
data.case2 <-  bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
data.case2 <- escalc(measure='OR',ai = r1, n1i = n1, ci = r2, n2i = n2,data=data.case2)
data.case2$y <- data.case2$yi
data.case2$s2 <- data.case2$vi
calR(data.case2,m-1)
calR(data.case2,m=1)
Rm <- calR(data.case2,1)$maxR
Rm
start.time <- Sys.time()
Rls.boot <- Rm.func.iterative.boot(data.case2)
end.time <- Sys.time()
end.time-start.time
start.time <- Sys.time()
m1 <- metabin(event.e = r1, n.e = n1, event.c = r2, n.c = n2,
data = data.case2,sm = 'OR',method.tau="REML")
library(metabin)
library(meta)
start.time <- Sys.time()
m1 <- metabin(event.e = r1, n.e = n1, event.c = r2, n.c = n2,
data = data.case2,sm = 'OR',method.tau="REML")
m11.r <- metarep(m1, common.effect = F, report.u.max = T)
library(metarep)
start.time <- Sys.time()
m1 <- metabin(event.e = r1, n.e = n1, event.c = r2, n.c = n2,
data = data.case2,sm = 'OR',method.tau="REML")
m11.r <- metarep(m1, common.effect = F, report.u.max = T)
end.time <- Sys.time()
end.time-start.time
m11.r$u_L
m11.r$u_R
data.case2 <-  bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
data.case2 <- escalc(measure='OR',ai = r1, n1i = n1, ci = r2, n2i = n2,data=data.case2)
data.case2$y <- data.case2$yi
data.case2$s2 <- data.case2$vi
start.time <- Sys.time()
res <- with(data.case2,rma(yi=y,vi=s2,method='REML'))
end.time <- Sys.time()
end.time-start.time
start.time <- Sys.time()
Rls <- Rm.func.iterative(data.case2)
end.time <- Sys.time()
end.time-start.time
start.time <- Sys.time()
Rls.boot <- Rm.func.iterative.boot(data.case2)
end.time <- Sys.time()
end.time-start.time
start.time <- Sys.time()
m1 <- metabin(event.e = r1, n.e = n1, event.c = r2, n.c = n2,
data = data.case2,sm = 'OR',method.tau="REML")
m11.r <- metarep(m1, common.effect = F, report.u.max = T)
end.time <- Sys.time()
end.time-start.time
r.val <- m11.r$r.value
# r.val.msg <- paste0("out of ",nrow(data.case2)," studies, at least: ",m11$u_L," with increased effect and ",m11$u_R," with decreased effect.")
# end.time <- Sys.time()
# end.time-start.time
# start.time <- Sys.time()
# m11 <- metarep(m1, common.effect = F, report.u.max = T)
# end.time <- Sys.time()
# end.time-start.time
#
# res <- with(data.case2,rma(yi=y,vi=s2,method='REML'))
# n <- nrow(data.case2)
# I2res <- sapply(1:n, function(x){
#   res <- with(data.case2[-x,],rma(yi=y,vi=s2,method='REML'))
#   return(res$I2)
# })
# resno1 <- with(data.case2[-1,],rma(yi=y,vi=s2,method='REML'))
# new1 = 100 * round( p_orig(yio = data.case2$y[1],
#                             vio = data.case2$s2[1],
#                             yr = resno1$b,
#                             t2 = resno1$tau2,
#                             vyr = resno1$se^2), 2 )
p.interval <- predict(res)
pgumbel <- Rm.func.iterative(data.case2)$P_1
pgumbel <- ifelse(pgumbel>0.01,round(pgumbel,2),0.01)
pboot <- Rm.func.iterative.boot(data.case2)$P_1
Rm <- calR(data.case2,1)$maxR
pind <- (pboot<0.05)+(pgumbel<0.05)
# rep_text <- ifelse(pind==0,"No ",ifelse(res$I2>0.75 & pind==2,"There is ","A suspected "))
Rls <- Rm.func.iterative(data.case2)
dat3 <- data.case2[-Rls$out_studies,]
res3 <- rma(yi=y,vi=s2,data=dat3,method='REML')
pgumbel2 <- Rm.func.iterative(dat3)$P_1
pboot2 <- Rm.func.iterative.boot(dat3)$P_1
Rm2 <- calR(dat3,1)$maxR
m12 <- metabin(event.e = r1, n.e = n1, event.c = r2, n.c = n2,
data = dat3,sm = 'OR')
start.time <- Sys.time()
m112 <- metarep(m12, common.effect = F, report.u.max = T)
end.time <- Sys.time()
end.time-start.time
r.val2 <- m112$r.value
detach("package:metarep", unload=TRUE)
pdf(file="/Users/menglixiao/Documents/umn/meta analysis/Rm_value/Draft/figure/case_plot2v2.pdf",width=7, height=6.0625)
par(mar=c(3.5,1,0,1))
shapevec <- with(data.frame(x = c(rep(15,17))), replace(x, Rls$out_studies, 1))
colvec <- rep("black",17)
colvec[Rls$out_studies] <- "indianred1"
x <- forest(data.case2$y,data.case2$s2,atransf=exp,slab=with(data.case2,paste(study.name)),
header=F,xlab='Odds ratio',
pch = shapevec,col=colvec,xlim=c(-9.3,7.5),alim=log(c(0.019,50)),at=log(c(0.02,0.2,0.5,1,2,5,50)),digits=2,top=1,ylim=c(-11,17.5),lty=c(1,0))
abline(h=17.5)
text(x$xlim[1],18,pos=4,font=2,"Author(s) and Year",adj=0)
text(x$xlim[2],18,pos=2,font=2,"Odds ratio [95% CI]",adj=1)
abline(h=0.5)
legend(x$xlim[1],x$ylim[1]+1,c("Non-replicable study", "Replicable study"), pch = c(1,15),col=c("indianred1","black"), cex=0.75,lty = c(1,1),bty = "n",x.intersp=0.25)
text(x$xlim[1], -1, pos=4, cex=0.75, bquote(paste("Heterogeneity (",tau^2,"=",.(formatC(res$tau2,digits = 2,format="f")),", Q = ",
.(formatC(res$QE, digits=2, format="f")), ", df = ", .(res$k - res$p),
", p < 0.01" , "; ", I^2, " = ",
.(formatC(res$I2/100, digits=2, format="f")), ")")))
text(x$xlim[1], -2, pos=4, cex=0.75, "Replicability")
text(x$xlim[1], -3, pos=4, cex=0.75, bquote("    "*R[1]==.(formatC(Rm, digits=2, format="f"))*","
~P(R[1][", "][boot])==
.(formatC(pboot, digits=2, format="f"))*","~P(R[1][", "][asymp])<
.(formatC(pgumbel, digits=2, format="f"))))
text(x$xlim[1], -4, pos=4, cex=0.75, bquote(paste("    Jaljuli et al.'s r-value < ",.(formatC(0.01, digits=2, format="f")), " (At least ",.(m11.r$u_R)," with increased effect and ",.(m11.r$u_L)," with decreased effect")*")"))
addpoly.default(res$beta,ci.lb=res$ci.lb,ci.ub=res$ci.ub,
cr.lb=p.interval$cr.lb,cr.ub = p.interval$cr.ub,rows=0,cex=x$cex,atransf=exp)
text(x$xlim[1], 0, pos=4, font=2,"RE model",cex=0.75)
abline(h=-4.5)
#
par(cex=x$cex)
text(x$xlim[1],-5,pos=4, cex=0.75,paste("After the study ",data.case2$study.name[Rls$out_studies]," is removed"))
p.interval2 <- predict(res3)
addpoly.default(res3$beta,ci.lb=res3$ci.lb,ci.ub=res3$ci.ub,
cr.lb=p.interval2$cr.lb,cr.ub = p.interval2$cr.ub,rows=-6,cex=x$cex,atransf=exp)
text(x$xlim[1], -6, pos=4, font=2,"RE model",cex=0.75)
text(x$xlim[1], -7, pos=4, cex=0.75, bquote(paste("Heterogeneity (",tau^2,"=",.(formatC(res3$tau2,digits = 2,format="f")),", Q = ",
.(formatC(res3$QE, digits=2, format="f")), ", df = ", .(res3$k - res3$p),
", p < 0.01" , "; ", I^2, " = ",
.(formatC(res3$I2/100, digits=2, format="f")), ")")))
text(x$xlim[1], -8, pos=4, cex=0.75, "Replicability")
text(x$xlim[1], -9, pos=4, cex=0.75, bquote("    "*R[1]==.(formatC(Rm2, digits=2, format="f"))*","
~P(R[1][", "][boot])==
.(formatC(pboot2, digits=2, format="f"))*","~P(R[1][", "][asymp])==
.(formatC(pgumbel2, digits=2, format="f"))))
text(x$xlim[1], -10, pos=4, cex=0.75, bquote(paste("    Jaljuli et al.'s r-value < ",.(formatC(0.01, digits=2, format="f")), " (At least ",.(m112$u_R)," with increased effect and ",.(m112$u_L)," with decreased effect")*")"))
# text(x$xlim[1],-6,pos=4,cex=0.75,bquote("Replicability ("*R[1]==.(formatC(Rm, digits=2, format="f"))*","
#                                         ~P(R[1][", "][boot])==
#                                           .(formatC(pboot, digits=2, format="f"))*","~P(R[1][", "][asymp])==
#                                           .(formatC(pgumbel, digits=2, format="f"))*")"))
#
dev.off()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
source(rma)
library(metafor)
source(rma())
rma()
rma
View(rma)
class(data.case2)
devtools::document()
Rm.func.iterative(data.case2)
devtools::document()
usethis::use_vignette("my-vignette")
bi2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/binary.csv')
load('/Users/menglixiao/Documents/umn/meta analysis/code/a_r/b.RData')
moller12 <-  bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
devtools::use_data(moller12)
usethis::use_data(moller12)
load_all()
devtools::load_all()
?calR
?data.trans.bin
data.case <- data.trans.bin(data=moller2012,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
moller12
moller12$r1
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
library(metafor)
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
class(moller12)
data.trans.bin <- function(data=data,n1i,ai,n2i,ci,measure,...){
data <- escalc(measure=measure,ai = ai, n1i = n1i, ci = ci, n2i = n2i,data=data,...)
data$y <- data$yi
data$s2 <- data$vi
return(data)
}
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR",... = )
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
escalc(measure=measure,ai = ai, n1i = n1i, ci = ci, n2i = n2i,data=moller12)
escalc(measure="OR",ai = ai, n1i = n1i, ci = ci, n2i = n2i,data=moller12)
escalc(measure="OR",ai = r1, n1i = n1, ci = r2, n2i = n2,data=moller12)
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
?match.call
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
data.trans.bin <- function(data=data,n1i,ai,n2i,ci,measure,...){
if(!missing(data)){
ai <- eval(substitute(ai), data, parent.frame())
bi <- eval(substitute(bi), data, parent.frame())
ci <- eval(substitute(ci), data, parent.frame())
di <- eval(substitute(di), data, parent.frame())
n1i <- eval(substitute(n1i), data, parent.frame())
n2i <- eval(substitute(n2i), data, parent.frame())
}
data <- escalc(measure=measure,ai = ai, n1i = n1i, ci = ci, n2i = n2i,data=data,...)
data$y <- data$yi
data$s2 <- data$vi
return(data)
}
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
detach("repMeta")
detach("package:repMeta", unload=TRUE)
devtools::load_all()
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all(".")
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all(".")
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
ls()
rm(data.trans.bin)
devtools::load_all(".")
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
data.trans.bin
devtools::load_all(".")
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all(".")
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
devtools::load_all(".")
data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
data.trans.bin
data.case <- data.trans.bin(data=moller12,ai = r1, n1i = n1, ci = r2, n2i = n2,measure="OR")
calR(data.case,1)
pRmasym(data.case,1)
pRmboot(data.case,1)
iden.ls <- Rm.func.iterative(data.case,1)
iden.ls$P_1
iden.ls$out_studies
iden.ls$stat
iden.ls.boot <- Rm.func.iterative.boot(data.case,1)
iden.ls.boot$P_1
iden.ls.boot$out_studies
iden.ls.boot$stat
usethis::use_citation()
usethis::use_gpl_license()
use_gpl_license()
??use_gpl_license()
??use_gpl_license
library(usethis)
?use_mit_license
version(usethis)
packageVersion(usethis)
packageVersion("usethis")
install.packages("usethis")
install.packages("usethis")
install.packages("gh")
install.packages("usethis")
install.packages("usethis")
install.packages("gert")
library(usethis)
use_gpl3_license()
usethis::use_gpl3_license()
getwd
getwd()
usethis::use_gpl3_license()
?use_gpl3_license
usethis::use_gpl3_license(include_future=T)
usethis::use_gpl3_license(include_future=T)
usethis::use_gpl3_license()
load('~/Documents/umn/meta analysis/code/a_r/continousMA.RData')
co2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/others.csv')
data.case <-  co2[co2$ma.id==cma.count[cma.count$N==10,]$ma.id[599],]
lahart18 <- data.case
usethis::use_data(lahart18, lahart18)
usethis::use_data(lahart18)
usethis::use_data(lahart18)
lahart18
?use_data
use_data(lahart18)
getwd()
detach("package:repMeta")
use_data(lahart18)
detach("package:usethis")
usethis::use_data(lahart18)
lahart18
knitr::opts_chunk$set(echo = FALSE,message=FALSE,warning = FALSE,fig.width = 10,fig.height = 5)
co2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/others.csv')
load('~/Documents/umn/meta analysis/code/a_r/continousMA.RData')
lahart18 <- co2[co2$ma.id==cma.count[cma.count$N==10,]$ma.id[599],]
library(devtools)
library(usethis)
install.packages("usethis")
library(usethis)
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("processx")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("cli")
install.packages("cli")
library("cli")
library(devtools)
packageVersion(cli)
packageVersion("cli")
install.packages("cli")
install.packages("cli")
library("cli")
library(devtools)
packageVersion("cli")
library(devtools)
install.packages("devtools")
library(devtools)
library(cli)
install.packages("devtools")
library(devtools)
install.packages("pkgload")
library(devtools)
install.packages("devtools")
library(devtools)
packageVersion("cli")
detach("package:cli")
library(cli)
install.packages("devtools")
library(devtools)
knitr::opts_chunk$set(echo = FALSE,message=FALSE,warning = FALSE,fig.width = 10,fig.height = 5)
co2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/others.csv')
load('~/Documents/umn/meta analysis/code/a_r/continousMA.RData')
lahart18 <- co2[co2$ma.id==cma.count[cma.count$N==10,]$ma.id[599],]
usethis::use_data(lahart18)
usethis::use_data(lahart18)
lahart18
lahart18 <- lahart18[,-2]
lahart18
usethis::use_data(lahart18)
usethis::use_data(lahart18,overwrite = T)
bi2 <- read.csv('/Users/menglixiao/Documents/umn/meta analysis/new_data/binary.csv')
load('/Users/menglixiao/Documents/umn/meta analysis/code/a_r/b.RData')
data.case2 <-  bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
moller12 <- bi2[bi2$ma.id==b[b$N==17,]$ma.id[151],]
moller12
moller12
moller12 <- moller12[,-2]
moller12
dim(lahart18)
dim(moller12)
moller12 <- moller12[,-c(4,5)]
moller12
usethis::use_data(moller12,overwrite = T)
dim(moller12)
file.exists("~/.ssh/id_rsa.pub")
